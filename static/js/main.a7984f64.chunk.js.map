{"version":3,"sources":["api/todosApi.js","api/usersApi.js","Components/todoItem.js","Components/todoList.js","App.js","index.js"],"names":["getTodos","fetch","then","response","json","catch","getUsers","TodoItem","_ref","id","title","name","completed","email","phone","react_default","a","createElement","TodoList","todos","Fragment","Object","toConsumableArray","map","todo","todoItem","user","App","_useState","useState","_useState2","slicedToArray","isStarted","setIsStarted","_useState3","_useState4","setTodos","type","onClick","_ref3","_ref4","todosFromServer","usersFromServer","regenerator_default","async","_context2","prev","next","awrap","Promise","all","sent","objectSpread2","find","person","userId","sort","b","localeCompare","stop","_ref5","_ref6","_context3","_ref7","_ref8","_context4","_ref9","_ref10","_context5","className","todoList","_ref2","_context","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a7984f64.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/todos';\nconst getTodos = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getTodos;\n\n\n","const URL = 'https://jsonplaceholder.typicode.com/users';\nconst getUsers = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ id, title, name, completed, email, phone }) => (\n  <tr>\n    <td>{id}</td>\n    <td>{title}</td>\n    <td>{name}</td>\n    <td>{completed === true ? 'completed' : 'no completed'}</td>\n    <td>{email}</td>\n    <td>{phone}</td>\n\n  </tr>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoItem';\n\nconst TodoList = ({ todos }) => (\n  <>\n    {[...todos]\n      .map(todo => (\n        <TodoItem\n          id={todo.id}\n          title={todo.title}\n          name={todo.user.name}\n          completed={todo.completed}\n          email={todo.user.email}\n          phone={todo.user.phone}\n        />\n      ))}\n  </>\n\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport getTodos from './api/todosApi';\nimport getUsers from './api/usersApi';\nimport TodoList from './Components/todoList';\n\nconst App = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [todos, setTodos] = useState([]);\n\n  const loadData = async() => {\n    setIsStarted(true);\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    setTodos(todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      })));\n  };\n\n  const sortedDataByTitle = async() => {\n    setIsStarted(true);\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    setTodos([...todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      }))].sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const sortedDataByName = async() => {\n    setIsStarted(true);\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    setTodos([...todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      }))].sort((a, b) => a.user.name.localeCompare(b.user.name)));\n  };\n\n  const sortedDataByStatus = async() => {\n    setIsStarted(true);\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    setTodos([...todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      }))].sort((a, b) => a.completed - b.completed));\n  };\n\n  const sortedDataById = async() => {\n    setIsStarted(true);\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    setTodos([...todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      }))].sort((a, b) => a.id - b.id));\n  };\n\n  return (\n    isStarted\n      ? (\n        <section>\n          <h1>Dynamic list of todos</h1>\n          <button\n            type=\"button\"\n            onClick={sortedDataByTitle}\n          >\n              Sort by title\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortedDataByName}\n          >\n              Sort by name\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortedDataByStatus}\n          >\n            Sort by status\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortedDataById}\n          >\n            Sort by Id\n          </button>\n\n          <div className=\"App\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Title</th>\n                  <th>Name</th>\n                  <th>Status</th>\n                  <th>Email</th>\n                  <th>Phone</th>\n                </tr>\n              </thead>\n              <tbody>\n                <TodoList\n                  todos={todos}\n                />\n              </tbody>\n            </table>\n          </div>\n        </section>\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            onClick={loadData}\n          >\n            {isStarted ? 'Loading...' : 'Load todos'}\n          </button>\n        </>\n      )\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}