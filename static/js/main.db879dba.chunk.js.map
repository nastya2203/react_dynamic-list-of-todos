{"version":3,"sources":["api/todosApi.js","api/usersApi.js","Components/todoItem.js","Components/todoList.js","App.js","index.js"],"names":["getTodos","fetch","then","response","json","catch","getUsers","TodoItem","_ref","id","title","name","completed","email","phone","react_default","a","createElement","TodoList","todos","Fragment","Object","toConsumableArray","map","todo","todoItem","user","key","App","_useState","useState","_useState2","slicedToArray","isStarted","setIsStarted","_useState3","_useState4","setTodos","sortBy","param1","param2","getMethod","_getMethod","_getMethod2","regenerator_default","async","_context2","prev","next","b","sort","localeCompare","stop","className","onClick","todoList","type","_ref2","todosFromServer","usersFromServer","_context","awrap","Promise","all","sent","objectSpread2","find","person","userId","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.db879dba.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/todos';\nconst getTodos = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getTodos;\n\n\n","const URL = 'https://jsonplaceholder.typicode.com/users';\nconst getUsers = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ id, title, name, completed, email, phone }) => (\n  <tr>\n    <td>{id}</td>\n    <td>{title}</td>\n    <td>{name}</td>\n    <td>{completed === true ? 'completed' : 'no completed'}</td>\n    <td>{email}</td>\n    <td>{phone}</td>\n\n  </tr>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoItem';\n\nconst TodoList = ({ todos }) => (\n  <>\n    {[...todos]\n      .map(todo => (\n        <TodoItem\n          id={todo.id}\n          title={todo.title}\n          name={todo.user.name}\n          completed={todo.completed}\n          email={todo.user.email}\n          phone={todo.user.phone}\n          key={todo.id}\n        />\n      ))}\n  </>\n\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.boolean,\n    user: PropTypes.object,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport getTodos from './api/todosApi';\nimport getUsers from './api/usersApi';\nimport TodoList from './Components/todoList';\n\nconst App = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [todos, setTodos] = useState([]);\n\n  const loadData = async() => {\n    setIsStarted(true);\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    setTodos(todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      })));\n  };\n\n  const sortBy = async(param1, param2) => {\n    if (typeof todos[0][param1] === 'number'\n      || typeof todos[0][param1] === 'boolean') {\n      const getMethod = (a, b) => a[param1] - b[param1];\n\n      setTodos([...todos].sort(getMethod));\n    }\n\n    if (typeof todos[0][param1] === 'object') {\n      const getMethod = (a, b) => a[param1][param2]\n        .localeCompare(b[param1][param2]);\n\n      setTodos([...todos].sort(getMethod));\n    }\n\n    if (typeof todos[0][param1] === 'string') {\n      const getMethod = (a, b) => a[param1].localeCompare(b[param1]);\n\n      setTodos([...todos].sort(getMethod));\n    }\n  };\n\n  return (\n    isStarted\n      ? (\n        <section>\n          <h1>Dynamic list of todos</h1>\n          <div className=\"App\">\n            <table>\n              <thead>\n                <tr>\n                  <th className=\"click\" onClick={() => sortBy('id')}>\n                    Id\n                  </th>\n                  <th className=\"click\" onClick={() => sortBy('title')}>\n                    Title\n                  </th>\n                  <th className=\"click\" onClick={() => sortBy('user', 'name')}>\n                    Name\n                  </th>\n                  <th className=\"click\" onClick={() => sortBy('completed')}>\n                    Status\n                  </th>\n                  <th>Email</th>\n                  <th>Phone</th>\n                </tr>\n              </thead>\n              <tbody>\n                <TodoList\n                  todos={todos}\n                />\n              </tbody>\n            </table>\n          </div>\n        </section>\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            onClick={loadData}\n          >\n            {isStarted ? 'Loading...' : 'Load todos'}\n          </button>\n        </>\n      )\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}